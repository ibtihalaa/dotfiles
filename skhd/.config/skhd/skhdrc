#!/usr/bin/env sh

# iterm2
shift + lalt - return : "${HOME}"/.config/yabai/scripts/open_iterm2.sh

# kitty
# shift + lalt - return : /Applications/Kitty.app/Contents/MacOS/kitty \
#     --single-instance \
#     --listen-on unix:/tmp/mykitty \
#     -c ${HOME}/.config/kitty/kitty_macos.conf \
#     -d ~

lalt - return : yabai -m window --swap west # swap with "main" tile by simply swap it west

# Focus window
lalt - j : yabai -m window --focus next || yabai -m window --focus first
lalt - k : yabai -m window --focus prev || yabai -m window --focus last

# Swap window
shift + lalt - j : yabai -m window --swap next
shift + lalt - k : yabai -m window --swap prev

# Rotating and axis
lalt - r : yabai -m space --rotate 90
lalt - y : yabai -m space --mirror y-axis
lalt - x : yabai -m space --mirror x-axis

# Resizing
lalt - h : expr $(yabai -m query --windows --window | jq .frame.x) \< 20 && yabai -m window --resize right:-60:0 || yabai -m window --resize left:-60:0
lalt - l : expr $(yabai -m query --windows --window | jq .frame.x) \< 20 && yabai -m window --resize right:60:0 || yabai -m window --resize left:60:0
lalt - i : yabai -m window --resize bottom:0:-60
lalt - o : yabai -m window --resize bottom:0:60
lalt - e : yabai -m window --toggle split
shift + lalt - 0 : yabai -m space --balance

# Move window
lalt - return : yabai -m window --warp first
lalt + ctrl - return :yabai -m window --warp east # move window out of the "main" tile

# Close window

# Display
#lalt - yabai -m display --focus prev

## Toggle floating window and center
lalt - space : yabai -m window --toggle float;\
	yabai -m window --grid 4:4:1:1:2:2Â 

# Focus space.
lalt - 1 : yabai -m space --focus 1
lalt - 2 : yabai -m space --focus 2 
lalt - 3 : yabai -m space --focus 3
lalt - 4 : yabai -m space --focus 4 
lalt - 5 : yabai -m space --focus 5 
lalt - 6 : yabai -m space --focus 6
lalt - 7 : yabai -m space --focus 7
lalt - 8 : yabai -m space --focus 8
lalt - 9 : yabai -m space --focus 9
lalt - tab : yabai -m window --focus next | yabai -m window --focus prev

# Move window to spaces
shift + lalt - 1 : yabai -m window --space 1;
shift + lalt - 2 : yabai -m window --space 2;
shift + lalt - 3 : yabai -m window --space 3;
shift + lalt - 4 : yabai -m window --space 4;
shift + lalt - 5 : yabai -m window --space 5;
shift + lalt - 6 : yabai -m window --space 6;
shift + lalt - 7 : yabai -m window --space 7;
shift + lalt - 8 : yabai -m window --space 8;
shift + lalt - 9 : yabai -m window --space 9;

# Focus space
lalt - left : yabai -m space --focus prev;
lalt - right : yabai -m space --focus next;

# Swap space and refresh
lalt + ctrl - left : yabai -m space --swap prev;\
  osascript -e 'tell application id "tracesOf.Uebersicht" to refresh widget id "spaces-jsx"'
lalt + ctrl - right : yabai -m space --swap next;\
  osascript -e 'tell application id "tracesOf.Uebersicht" to refresh widget id "spaces-jsx"'

# TODO: Integrate keybings for tmux sessions split panes
# Focus window using vim keybinds.
#lalt - h [
#* : yabai -m window --focus west
#"kitty" : if [ $(tmux display-message -p '#{pane_at_left}') -ne 1 ];\
#then tmux run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L";\
#else yabai -m window --focus west || true; fi
#"iTerm2" : if [ $(tmux display-message -p '#{pane_at_left}') -ne 1 ];\
#then tmux run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L";\
#else yabai -m window --focus west || true; fi
#]
#
#lalt - j [ 
#* : yabai -m window --focus south #"kitty" : if [ $(tmux display-message -p '#{pane_at_bottom}') -ne 1 ];\ #then tmux run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D";\ #else yabai -m window --focus south || true; fi
#"iTerm2" : if [ $(tmux display-message -p '#{pane_at_bottom}') -ne 1 ];\
#then tmux run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D";\
#else yabai -m window --focus south || true; fi
#]
#
#lalt - k [
#* : yabai -m window --focus north
#"kitty" : if [ $(tmux display-message -p '#{pane_at_top}') -ne 1 ];\
#then tmux run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U";\
#else yabai -m window --focus north || true; fi
#"iTerm2" : if [ $(tmux display-message -p '#{pane_at_top}') -ne 1 ];\
#then tmux run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U";\
#else yabai -m window --focus north || true; fi
#]
#
#lalt - l [
#* : yabai -m window --focus east
#"kitty" : if [ $(tmux display-message -p '#{pane_at_right}') -ne 1 ];\
#then tmux run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -L";\
#else yabai -m window --focus east || true; fi
#"iTerm2" : if [ $(tmux display-message -p '#{pane_at_right}') -ne 1 ];\
#then tmux run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -L";\
#else yabai -m window --focus east || true; fi
#]
##
## Move focused window using vim keybinds.
## Disabled: Using keybinds for tmux.
#shift + lalt - h [
#* : yabai -m window --swap west
#"kitty" : if [ $(tmux display-message -p '#{pane_at_left}') -ne 1 ];\
#then tmux run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L";\
#else yabai -m window --swap west || true; fi
#]
#
#shift + lalt - j [
#* : yabai -m window --swap south
#"kitty" : if [ $(tmux display-message -p '#{pane_at_bottom}') -ne 1 ];\
#then tmux run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D";\
#else yabai -m window --swap south || true; fi
#]
#
#shift + lalt - k [
#* : yabai -m window --swap north
#"kitty" : if [ $(tmux display-message -p '#{pane_at_top}') -ne 1 ];\
#then tmux run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U";\
#else yabai -m window --swap north || true; fi
#]
#
#shift + lalt - l [
#* : yabai -m window --swap east
#"kitty" : if [ $(tmux display-message -p '#{pane_at_right}') -ne 1 ];\
#then tmux run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -L";\
#else yabai -m window --swap east || true; fi
#]
